name: UUID Guard

on:
  pull_request:
    paths:
      - 'config/**.json'
      - 'config/ShotycutJsons_en/**.json'
      - 'scripts/**'
  pull_request_target:
    types: [opened, synchronize]
    paths:
      - 'config/**.json'
      - 'config/ShotycutJsons_en/**.json'
      - 'scripts/**'
  push:
    branches:
      - main
    paths:
      - 'config/**.json'
      - 'config/ShotycutJsons_en/**.json'
      - 'scripts/**'

permissions:
  contents: write

jobs:
  check-and-fix:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Auto-assign IDs on PRs from same repo (before validate)
        if: github.event_name == 'pull_request' && (github.event.pull_request.head.repo.full_name == github.repository)
        run: |
          set -e
          python3 scripts/assign_ids.py --dir config/shortcutJsons --apply || true
          python3 scripts/assign_ids.py --dir config/ShotycutJsons_en --apply || true
          if ! git diff --quiet; then
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add -A
            git commit -m "chore: auto-assign missing UUIDs (CI)"
            git push origin "${{ github.event.pull_request.head.ref }}"
          else
            echo "No changes from assign_ids.py"
          fi

      - name: Auto-assign IDs on main push (before validate)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          set -e
          python3 scripts/assign_ids.py --dir config/shortcutJsons --apply || true
          python3 scripts/assign_ids.py --dir config/ShotycutJsons_en --apply || true
          if ! git diff --quiet; then
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add -A
            git commit -m "chore: auto-assign missing UUIDs (main)"
            git push
          else
            echo "No changes from assign_ids.py on main"
          fi

      - name: Auto-assign IDs for fork PRs
        if: github.event_name == 'pull_request_target' && (github.event.pull_request.head.repo.full_name != github.repository)
        run: |
          set -e
          # Check out the PR head for fork PRs
          git fetch origin pull/${{ github.event.number }}/head:pr-${{ github.event.number }}
          git checkout pr-${{ github.event.number }}
          python3 scripts/assign_ids.py --dir config/shortcutJsons --apply || true
          python3 scripts/assign_ids.py --dir config/ShotycutJsons_en --apply || true

      - name: Dry-run assign IDs (report)
        run: |
          # For fork PRs, we need to check out the PR head first
          if [[ "${{ github.event_name }}" == "pull_request_target" && "${{ github.event.pull_request.head.repo.full_name }}" != "${{ github.repository }}" ]]; then
            git fetch origin pull/${{ github.event.number }}/head:pr-${{ github.event.number }}
            git checkout pr-${{ github.event.number }}
          fi
          python3 scripts/assign_ids.py --dir config/shortcutJsons --dry-run || true
          python3 scripts/assign_ids.py --dir config/ShotycutJsons_en --dry-run || true

      - name: Validate IDs
        run: |
          # For fork PRs, we need to check out the PR head first
          if [[ "${{ github.event_name }}" == "pull_request_target" && "${{ github.event.pull_request.head.repo.full_name }}" != "${{ github.repository }}" ]]; then
            git fetch origin pull/${{ github.event.number }}/head:pr-${{ github.event.number }}
            git checkout pr-${{ github.event.number }}
          fi
          python3 scripts/validate_ids.py --dir config/shortcutJsons || exit 1
          python3 scripts/validate_ids.py --dir config/ShotycutJsons_en || exit 1

      - name: Compare IDs vs base (PR only)
        if: github.event_name == 'pull_request'
        run: |
          # Fetch base branch file to /tmp for comparison if exists
          set -e
          git fetch --no-tags --prune --depth=1 origin "${{ github.base_ref }}"
          # Try to read base version of a canonical file if present
          if git show "origin/${{ github.base_ref }}:config/shortcuts.json" > /tmp/base.json 2>/dev/null; then
            python3 scripts/compare_ids.py --old-file /tmp/base.json --new-file config/shortcuts.json || true
          else
            echo "No canonical config/shortcuts.json in base; skipping compare." || true
          fi

      - name: Sync shortcutJsons to iOS (PR, same repo)
        if: github.event_name == 'pull_request' && (github.event.pull_request.head.repo.full_name == github.repository)
        run: |
          set -e
          # Mirror config/shortcutJsons -> iOS/EasyShortcutKey/shortcutJsons
          rm -rf iOS/EasyShortcutKey/shortcutJsons
          mkdir -p iOS/EasyShortcutKey/shortcutJsons
          cp -a config/shortcutJsons/. iOS/EasyShortcutKey/shortcutJsons/
          
          # Mirror config/ShotycutJsons_en -> iOS/EasyShortcutKey/shortcutJsons_en
          rm -rf iOS/EasyShortcutKey/shortcutJsons_en
          mkdir -p iOS/EasyShortcutKey/shortcutJsons_en
          cp -a config/ShotycutJsons_en/. iOS/EasyShortcutKey/shortcutJsons_en/
          
          if ! git diff --quiet; then
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add -A
            git commit -m "chore: sync shortcutJsons to iOS (CI)"
            git push origin "${{ github.event.pull_request.head.ref }}"
          else
            echo "No changes to sync"
          fi

      - name: Sync shortcutJsons to iOS (fork PR)
        if: github.event_name == 'pull_request_target' && (github.event.pull_request.head.repo.full_name != github.repository)
        run: |
          set -e
          # For fork PRs, check out the PR head to get the latest changes
          git fetch origin pull/${{ github.event.number }}/head:pr-${{ github.event.number }}
          git checkout pr-${{ github.event.number }}
          
          # Mirror config/shortcutJsons -> iOS/EasyShortcutKey/shortcutJsons
          rm -rf iOS/EasyShortcutKey/shortcutJsons
          mkdir -p iOS/EasyShortcutKey/shortcutJsons
          cp -a config/shortcutJsons/. iOS/EasyShortcutKey/shortcutJsons/
          
          # Mirror config/ShotycutJsons_en -> iOS/EasyShortcutKey/shortcutJsons_en
          rm -rf iOS/EasyShortcutKey/shortcutJsons_en
          mkdir -p iOS/EasyShortcutKey/shortcutJsons_en
          cp -a config/ShotycutJsons_en/. iOS/EasyShortcutKey/shortcutJsons_en/
          
          if ! git diff --quiet; then
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add -A
            git commit -m "chore: sync shortcutJsons to iOS (fork PR #${{ github.event.number }})"
            
            # Push to a new branch in the base repository
            SYNC_BRANCH="ci/sync-shortcutjsons-pr-${{ github.event.number }}"
            git push origin HEAD:$SYNC_BRANCH
            
            # Create PR using GitHub CLI
            echo "Creating PR for iOS sync from fork PR #${{ github.event.number }}"
            gh pr create \
              --base main \
              --head "$SYNC_BRANCH" \
              --title "chore: sync shortcutJsons to iOS (from fork PR #${{ github.event.number }})" \
              --body "Auto-generated from fork PR #${{ github.event.number }}. This PR syncs changes from config/shortcutJsons and config/ShotycutJsons_en to iOS/EasyShortcutKey/shortcutJsons and iOS/EasyShortcutKey/shortcutJsons_en." \
              || echo "PR creation failed or already exists"
          else
            echo "No changes to sync from fork PR"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      - name: Debug sync information
        run: |
          echo "=== Debug Info ==="
          echo "Event: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
          echo "Repository: ${{ github.repository }}"
          echo "Head repo (PR): ${{ github.event.pull_request.head.repo.full_name || 'N/A' }}"
          echo ""
          echo "=== Directory Contents ==="
          echo "config/shortcutJsons:"
          ls -la config/shortcutJsons/ || echo "Directory not found"
          echo ""
          echo "config/ShotycutJsons_en:"
          ls -la config/ShotycutJsons_en/ || echo "Directory not found"
          echo ""
          echo "iOS/EasyShortcutKey/shortcutJsons:"
          ls -la iOS/EasyShortcutKey/shortcutJsons/ || echo "Directory not found"
          echo ""
          echo "iOS/EasyShortcutKey/shortcutJsons_en:"
          ls -la iOS/EasyShortcutKey/shortcutJsons_en/ || echo "Directory not found"
          echo ""
          echo "=== Git Status ==="
          git status --porcelain || echo "No changes detected"

      - name: On main push, sync shortcutJsons to iOS
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          set -e
          # Mirror config/shortcutJsons -> iOS/EasyShortcutKey/shortcutJsons
          rm -rf iOS/EasyShortcutKey/shortcutJsons
          mkdir -p iOS/EasyShortcutKey/shortcutJsons
          cp -a config/shortcutJsons/. iOS/EasyShortcutKey/shortcutJsons/
          
          # Mirror config/ShotycutJsons_en -> iOS/EasyShortcutKey/shortcutJsons_en
          rm -rf iOS/EasyShortcutKey/shortcutJsons_en
          mkdir -p iOS/EasyShortcutKey/shortcutJsons_en
          cp -a config/ShotycutJsons_en/. iOS/EasyShortcutKey/shortcutJsons_en/
          
          if ! git diff --quiet; then
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add -A
            git commit -m "chore: sync shortcutJsons to iOS"
            git push
          else
            echo "No changes to sync"
          fi
